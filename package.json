{
  "name": "server",
  "version": "1.0.0",
  "description": "",
  "main": "server.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "node server/server.js",
    "start:deploy": "node server/deploy-server.js",
    "dev": "nodemon server/server.js",
    "dev:frontend": "cd client && npm start",
    "dev:proxy": "node server/dev-proxy-server.js",
    "dev:all": "concurrently \"npm run dev\" \"npm run dev:frontend\" \"npm run dev:proxy\"",
    "setup": "node dev-setup.js",
    "build-client": "cd client && npm install && npm run build",
    "build": "npm install && npm run build-client",
    "build-and-start": "npm run build-client && npm start",
    "render-build": "npm install && cd client && npm install && npm run build && chmod +x ./post-build.sh && ./post-build.sh",
    "health-check": "curl -s http://localhost:3000/api/health | json_pp",
    "debug-paths": "node -e \"console.log('CWD:', process.cwd()); console.log('__dirname:', __dirname); const fs=require('fs'); const path=require('path'); const paths = ['/opt/render/project/src/client/build', './client/build', './build', '/opt/render/project/src/build']; paths.forEach(p => console.log(p, fs.existsSync(p) ? 'EXISTS' : 'NOT FOUND'));\"",
    "debug-render": "node debug-render.js"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "dependencies": {
    "bcrypt": "^6.0.0",
    "bcryptjs": "^3.0.2",
    "cloudinary": "^2.7.0",
    "cookie-parser": "^1.4.7",
    "cors": "^2.8.5",
    "dotenv": "^17.1.0",
    "express": "^5.1.0",
    "http-proxy-middleware": "^2.0.9",
    "jsonwebtoken": "^9.0.2",
    "mongoose": "^8.17.1",
    "multer": "^2.0.2",
    "streamifier": "^0.1.1"
  },
  "devDependencies": {
    "concurrently": "^8.2.2",
    "nodemon": "^3.1.10"
  }
}
